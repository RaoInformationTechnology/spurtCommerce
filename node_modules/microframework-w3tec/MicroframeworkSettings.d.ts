import { ShutdownHandler } from "./ShutdownHandler";
/**
 * Bootstrap settings used across all loader.
 * Used to register shutdown handlers - special functions that will be executed when framework is shutdown.
 * Also can be used to store and share data across modules.
 */
export declare class MicroframeworkSettings {
    private config;
    /**
     * Data which can be used to share data across modules.
     */
    private data;
    /**
     * Special functions that will be executed when framework is shutdown.
     */
    private shutdownHandlers;
    constructor(config: any);
    /**
     * Sets data that can be used across other modules.
     */
    setData(key: string, value: any): this;
    /**
     * Gets previously set data by this or before executed module.
     */
    getData(key: string): any;
    /**
     * Adds a shutdown handler - special function that will be executed when framework is shutdown.
     */
    onShutdown(handler: ShutdownHandler): this;
    /**
     * Gets all shutdown handlers - special functions that will be executed when framework is shutdown.
     */
    getShutdownHandlers(): ShutdownHandler[];
}
