{"version":3,"sources":["../../src/decorator/Method.ts"],"names":[],"mappings":";;AAAA,kCAAgD;AAehD;;;GAGG;AACH,gBAAuB,MAAkB,EAAE,KAAqB;IAC5D,MAAM,CAAC,UAAU,MAAc,EAAE,UAAkB;QAC/C,8BAAsB,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC;YAClC,IAAI,EAAE,MAAM;YACZ,MAAM,EAAE,MAAM,CAAC,WAAW;YAC1B,MAAM,EAAE,UAAU;YAClB,KAAK,EAAE,KAAK;SACf,CAAC,CAAC;IACP,CAAC,CAAC;AACN,CAAC;AATD,wBASC","file":"Method.js","sourcesContent":["import {getMetadataArgsStorage} from \"../index\";\nimport {ActionType} from \"../metadata/types/ActionType\";\n\n/**\n * Registers an action to be executed when request with specified method comes on a given route.\n * Must be applied on a controller action.\n */\nexport function Method(method: ActionType, route?: RegExp): Function;\n\n/**\n * Registers an action to be executed when request with specified method comes on a given route.\n * Must be applied on a controller action.\n */\nexport function Method(method: ActionType, route?: string): Function;\n\n/**\n * Registers an action to be executed when request with specified method comes on a given route.\n * Must be applied on a controller action.\n */\nexport function Method(method: ActionType, route?: string|RegExp): Function {\n    return function (object: Object, methodName: string) {\n        getMetadataArgsStorage().actions.push({\n            type: method,\n            target: object.constructor,\n            method: methodName,\n            route: route\n        });\n    };\n}\n"],"sourceRoot":".."}