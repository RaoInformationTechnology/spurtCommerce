{"version":3,"sources":["../../src/decorator/JsonController.ts"],"names":[],"mappings":";;AAAA,kCAAgD;AAEhD;;;;;GAKG;AACH,wBAA+B,SAAkB;IAC7C,MAAM,CAAC,UAAU,MAAgB;QAC7B,8BAAsB,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC;YACtC,IAAI,EAAE,MAAM;YACZ,MAAM,EAAE,MAAM;YACd,KAAK,EAAE,SAAS;SACnB,CAAC,CAAC;IACP,CAAC,CAAC;AACN,CAAC;AARD,wCAQC","file":"JsonController.js","sourcesContent":["import {getMetadataArgsStorage} from \"../index\";\n\n/**\n * Defines a class as a JSON controller. If JSON controller is used, then all controller actions will return\n * a serialized json data, and its response content-type always will be application/json.\n *\n * @param baseRoute Extra path you can apply as a base route to all controller actions\n */\nexport function JsonController(baseRoute?: string) {\n    return function (object: Function) {\n        getMetadataArgsStorage().controllers.push({\n            type: \"json\",\n            target: object,\n            route: baseRoute\n        });\n    };\n}\n"],"sourceRoot":".."}