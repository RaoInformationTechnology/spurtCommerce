{"version":3,"sources":["../../src/decorator/UseBefore.ts"],"names":[],"mappings":";;AAAA,kCAAgD;AAoBhD;;;GAGG;AACH;IAA0B,qBAAsF;SAAtF,UAAsF,EAAtF,qBAAsF,EAAtF,IAAsF;QAAtF,gCAAsF;;IAC5G,MAAM,CAAC,UAAU,gBAAiC,EAAE,UAAmB;QACnE,WAAW,CAAC,OAAO,CAAC,UAAA,UAAU;YAC1B,8BAAsB,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC;gBAC/B,MAAM,EAAE,UAAU,CAAC,CAAC,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC,CAAC,gBAA4B;gBAChF,MAAM,EAAE,UAAU;gBAClB,UAAU,EAAE,UAAU;gBACtB,WAAW,EAAE,KAAK;aACrB,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;AACN,CAAC;AAXD,8BAWC","file":"UseBefore.js","sourcesContent":["import {getMetadataArgsStorage} from \"../index\";\n\n/**\n * Specifies a given middleware to be used for controller or controller action BEFORE the action executes.\n * Must be set to controller action or controller class.\n */\nexport function UseBefore(...middlewares: Array<Function>): Function;\n\n/**\n * Specifies a given middleware to be used for controller or controller action BEFORE the action executes.\n * Must be set to controller action or controller class.\n */\nexport function UseBefore(...middlewares: Array<(context: any, next: () => Promise<any>) => Promise<any>>): Function;\n\n/**\n * Specifies a given middleware to be used for controller or controller action BEFORE the action executes.\n * Must be set to controller action or controller class.\n */\nexport function UseBefore(...middlewares: Array<(request: any, response: any, next: Function) => any>): Function;\n\n/**\n * Specifies a given middleware to be used for controller or controller action BEFORE the action executes.\n * Must be set to controller action or controller class.\n */\nexport function UseBefore(...middlewares: Array<Function|((request: any, response: any, next: Function) => any)>): Function {\n    return function (objectOrFunction: Object|Function, methodName?: string) {\n        middlewares.forEach(middleware => {\n            getMetadataArgsStorage().uses.push({\n                target: methodName ? objectOrFunction.constructor : objectOrFunction as Function,\n                method: methodName,\n                middleware: middleware,\n                afterAction: false\n            });\n        });\n    };\n}\n"],"sourceRoot":".."}