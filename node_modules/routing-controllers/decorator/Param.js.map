{"version":3,"sources":["../../src/decorator/Param.ts"],"names":[],"mappings":";;AAAA,kCAAgD;AAEhD;;;GAGG;AACH,eAAsB,IAAY;IAC9B,MAAM,CAAC,UAAU,MAAc,EAAE,UAAkB,EAAE,KAAa;QAC9D,8BAAsB,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC;YACjC,IAAI,EAAE,OAAO;YACb,MAAM,EAAE,MAAM;YACd,MAAM,EAAE,UAAU;YAClB,KAAK,EAAE,KAAK;YACZ,IAAI,EAAE,IAAI;YACV,KAAK,EAAE,KAAK;YACZ,QAAQ,EAAE,IAAI;YACd,cAAc,EAAE,SAAS;SAC5B,CAAC,CAAC;IACP,CAAC,CAAC;AACN,CAAC;AAbD,sBAaC","file":"Param.js","sourcesContent":["import {getMetadataArgsStorage} from \"../index\";\n\n/**\n * Injects a request's route parameter value to the controller action parameter.\n * Must be applied on a controller action parameter.\n */\nexport function Param(name: string): Function {\n    return function (object: Object, methodName: string, index: number) {\n        getMetadataArgsStorage().params.push({\n            type: \"param\",\n            object: object,\n            method: methodName,\n            index: index,\n            name: name,\n            parse: false, // it does not make sense for Param to be parsed\n            required: true, // params are always required, because if they are missing router will not match the route\n            classTransform: undefined\n        });\n    };\n}"],"sourceRoot":".."}