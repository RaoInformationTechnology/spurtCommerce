{"version":3,"sources":["../../src/decorator/Authorized.ts"],"names":[],"mappings":";;AAAA,kCAAgD;AA0BhD;;;GAGG;AACH,oBAA2B,WAAsC;IAC7D,MAAM,CAAC,UAAU,WAA4B,EAAE,MAAe;QAC1D,8BAAsB,EAAE,CAAC,gBAAgB,CAAC,IAAI,CAAC;YAC3C,IAAI,EAAE,YAAY;YAClB,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,WAAuB;YAClE,MAAM,EAAE,MAAM;YACd,KAAK,EAAE,WAAW;SACrB,CAAC,CAAC;IACP,CAAC,CAAC;AACN,CAAC;AATD,gCASC","file":"Authorized.js","sourcesContent":["import {getMetadataArgsStorage} from \"../index\";\n\n/**\n * Marks controller action to have a special access.\n * Authorization logic must be defined in routing-controllers settings.\n */\nexport function Authorized(): Function;\n\n/**\n * Marks controller action to have a special access.\n * Authorization logic must be defined in routing-controllers settings.\n */\nexport function Authorized(role: any): Function;\n\n/**\n * Marks controller action to have a special access.\n * Authorization logic must be defined in routing-controllers settings.\n */\nexport function Authorized(roles: any[]): Function;\n\n/**\n * Marks controller action to have a special access.\n * Authorization logic must be defined in routing-controllers settings.\n */\nexport function Authorized(role: Function): Function;\n\n/**\n * Marks controller action to have a special access.\n * Authorization logic must be defined in routing-controllers settings.\n */\nexport function Authorized(roleOrRoles?: string|string[]|Function): Function {\n    return function (clsOrObject: Function|Object, method?: string) {\n        getMetadataArgsStorage().responseHandlers.push({\n            type: \"authorized\",\n            target: method ? clsOrObject.constructor : clsOrObject as Function,\n            method: method,\n            value: roleOrRoles\n        });\n    };\n}"],"sourceRoot":".."}