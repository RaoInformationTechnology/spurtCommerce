{"version":3,"sources":["../../src/driver/express/ExpressDriver.ts"],"names":[],"mappings":"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","file":"ExpressDriver.js","sourcesContent":["import {UseMetadata} from \"../../metadata/UseMetadata\";\nimport {MiddlewareMetadata} from \"../../metadata/MiddlewareMetadata\";\nimport {ActionMetadata} from \"../../metadata/ActionMetadata\";\nimport {Action} from \"../../Action\";\nimport {ParamMetadata} from \"../../metadata/ParamMetadata\";\nimport {BaseDriver} from \"../BaseDriver\";\nimport {ExpressMiddlewareInterface} from \"./ExpressMiddlewareInterface\";\nimport {ExpressErrorMiddlewareInterface} from \"./ExpressErrorMiddlewareInterface\";\nimport {AccessDeniedError} from \"../../error/AccessDeniedError\";\nimport {AuthorizationCheckerNotDefinedError} from \"../../error/AuthorizationCheckerNotDefinedError\";\nimport {isPromiseLike} from \"../../util/isPromiseLike\";\nimport {getFromContainer} from \"../../container\";\nimport {AuthorizationRequiredError} from \"../../error/AuthorizationRequiredError\";\nimport {NotFoundError} from \"../../index\";\n\nconst cookie = require(\"cookie\");\nconst templateUrl = require(\"template-url\");\n\n/**\n * Integration with express framework.\n */\nexport class ExpressDriver extends BaseDriver {\n\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n\n    constructor(public express?: any) {\n        super();\n        this.loadExpress();\n        this.app = this.express;\n    }\n\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n\n    /**\n     * Initializes the things driver needs before routes and middlewares registration.\n     */\n    initialize() {\n        if (this.cors) {\n            const cors = require(\"cors\");\n            if (this.cors === true) {\n                this.express.use(cors());\n            } else {\n                this.express.use(cors(this.cors));\n            }\n        }\n    }\n\n    /**\n     * Registers middleware that run before controller actions.\n     */\n    registerMiddleware(middleware: MiddlewareMetadata): void {\n\n        // if its an error handler then register it with proper signature in express\n        if ((middleware.instance as ExpressErrorMiddlewareInterface).error) {\n            this.express.use(function (error: any, request: any, response: any, next: (err?: any) => any) {\n                (middleware.instance as ExpressErrorMiddlewareInterface).error(error, request, response, next);\n            });\n            return;\n        }\n\n        // if its a regular middleware then register it as express middleware\n        if ((middleware.instance as ExpressMiddlewareInterface).use) {\n            this.express.use((request: any, response: any, next: (err: any) => any) => {\n                try {\n                    const useResult = (middleware.instance as ExpressMiddlewareInterface).use(request, response, next);\n                    if (isPromiseLike(useResult)) {\n                        useResult.catch((error: any) => {\n                            this.handleError(error, undefined, {request, response, next});\n                            return error;\n                        });\n                    }\n\n                } catch (error) {\n                    this.handleError(error, undefined, {request, response, next});\n                }\n            });\n        }\n    }\n\n    /**\n     * Registers action in the driver.\n     */\n    registerAction(actionMetadata: ActionMetadata, executeCallback: (options: Action) => any): void {\n\n        // middlewares required for this action\n        const defaultMiddlewares: any[] = [];\n\n        if (actionMetadata.isBodyUsed) {\n            if (actionMetadata.isJsonTyped) {\n                defaultMiddlewares.push(this.loadBodyParser().json(actionMetadata.bodyExtraOptions));\n            } else {\n                defaultMiddlewares.push(this.loadBodyParser().text(actionMetadata.bodyExtraOptions));\n            }\n        }\n\n        if (actionMetadata.isAuthorizedUsed) {\n            defaultMiddlewares.push((request: any, response: any, next: Function) => {\n                if (!this.authorizationChecker)\n                    throw new AuthorizationCheckerNotDefinedError();\n\n                const action: Action = { request, response, next };\n                try {\n                    const checkResult = this.authorizationChecker(action, actionMetadata.authorizedRoles);\n\n                    const handleError = (result: any) => {\n                        if (!result) {\n                            let error = actionMetadata.authorizedRoles.length === 0 ? new AuthorizationRequiredError(action) : new AccessDeniedError(action);\n                            this.handleError(error, actionMetadata, action);\n                        } else {\n                            next();\n                        }\n                    };\n\n                    if (isPromiseLike(checkResult)) {\n                        checkResult\n                            .then(result => handleError(result))\n                            .catch(error => this.handleError(error, actionMetadata, action));\n                    } else {\n                        handleError(checkResult);\n                    }\n                } catch (error) {\n                    this.handleError(error, actionMetadata, action);\n                }\n            });\n        }\n\n        if (actionMetadata.isFileUsed || actionMetadata.isFilesUsed) {\n            const multer = this.loadMulter();\n            actionMetadata.params\n                .filter(param => param.type === \"file\")\n                .forEach(param => {\n                    defaultMiddlewares.push(multer(param.extraOptions).single(param.name));\n                });\n            actionMetadata.params\n                .filter(param => param.type === \"files\")\n                .forEach(param => {\n                    defaultMiddlewares.push(multer(param.extraOptions).array(param.name));\n                });\n        }\n\n        // user used middlewares\n        const uses = [...actionMetadata.controllerMetadata.uses, ...actionMetadata.uses];\n        const beforeMiddlewares = this.prepareMiddlewares(uses.filter(use => !use.afterAction));\n        const afterMiddlewares = this.prepareMiddlewares(uses.filter(use => use.afterAction));\n\n        // prepare route and route handler function\n        const route = ActionMetadata.appendBaseRoute(this.routePrefix, actionMetadata.fullRoute);\n        const routeHandler = function routeHandler(request: any, response: any, next: Function) {\n            // Express calls the \"get\" route automatically when we call the \"head\" route:\n            // Reference: https://expressjs.com/en/4x/api.html#router.METHOD\n            // This causes a double action execution on our side, which results in an unhandled rejection,\n            // saying: \"Can't set headers after they are sent\".\n            // The following line skips action processing when the request method does not match the action method.\n            if (request.method.toLowerCase() !== actionMetadata.type)\n                return next();\n\n            return executeCallback({request, response, next});\n        };\n\n        // finally register action in express\n        this.express[actionMetadata.type.toLowerCase()](...[\n            route,\n            ...beforeMiddlewares,\n            ...defaultMiddlewares,\n            routeHandler,\n            ...afterMiddlewares\n        ]);\n    }\n\n    /**\n     * Registers all routes in the framework.\n     */\n    registerRoutes() {\n    }\n\n    /**\n     * Gets param from the request.\n     */\n    getParamFromRequest(action: Action, param: ParamMetadata): any {\n        const request: any = action.request;\n        switch (param.type) {\n            case \"body\":\n                return request.body;\n\n            case \"body-param\":\n                return request.body[param.name];\n\n            case \"param\":\n                return request.params[param.name];\n\n            case \"params\":\n                return request.params;\n\n            case \"session\":\n                if (param.name)\n                    return request.session[param.name];\n\n                return request.session;\n\n            case \"state\":\n                throw new Error(\"@State decorators are not supported by express driver.\");\n\n            case \"query\":\n                return request.query[param.name];\n\n            case \"queries\":\n                return request.query;\n\n            case \"header\":\n                return request.headers[param.name.toLowerCase()];\n\n            case \"headers\":\n                return request.headers;\n\n            case \"file\":\n                return request.file;\n\n            case \"files\":\n                return request.files;\n\n            case \"cookie\":\n                if (!request.headers.cookie) return;\n                const cookies = cookie.parse(request.headers.cookie);\n                return cookies[param.name];\n\n            case \"cookies\":\n                if (!request.headers.cookie) return {};\n                return cookie.parse(request.headers.cookie);\n        }\n    }\n\n    /**\n     * Handles result of successfully executed controller action.\n     */\n    handleSuccess(result: any, action: ActionMetadata, options: Action): void {\n\n        // if the action returned the response object itself, short-circuits\n        if (result && result === options.response) {\n            options.next();\n            return;\n        }\n\n        // transform result if needed\n        result = this.transformResult(result, action, options);\n\n        // set http status code\n        if (result === undefined && action.undefinedResultCode) {\n            if (action.undefinedResultCode instanceof Function) {\n                throw new (action.undefinedResultCode as any)(options);\n            }\n            options.response.status(action.undefinedResultCode);\n        }\n        else if (result === null) {\n            if (action.nullResultCode) {\n                if (action.nullResultCode instanceof Function) {\n                    throw new (action.nullResultCode as any)(options);\n                }\n                options.response.status(action.nullResultCode);\n            } else {\n                options.response.status(204);\n            }\n        }\n        else if (action.successHttpCode) {\n            options.response.status(action.successHttpCode);\n        }\n\n        // apply http headers\n        Object.keys(action.headers).forEach(name => {\n            options.response.header(name, action.headers[name]);\n        });\n\n        if (action.redirect) { // if redirect is set then do it\n            if (typeof result === \"string\") {\n                options.response.redirect(result);\n            } else if (result instanceof Object) {\n                options.response.redirect(templateUrl(action.redirect, result));\n            } else {\n                options.response.redirect(action.redirect);\n            }\n\n            options.next();\n        }\n        else if (action.renderedTemplate) { // if template is set then render it\n            const renderOptions = result && result instanceof Object ? result : {};\n\n            options.response.render(action.renderedTemplate, renderOptions, (err: any, html: string) => {\n                if (err && action.isJsonTyped) {\n                    return options.next(err);\n\n                } else if (err && !action.isJsonTyped) {\n                    return options.next(err);\n\n                } else if (html) {\n                    options.response.send(html);\n                }\n                options.next();\n            });\n        }\n        else if (result === undefined) { // throw NotFoundError on undefined response\n\n            if (action.undefinedResultCode) {\n                if (action.isJsonTyped) {\n                    options.response.json();\n                } else {\n                    options.response.send();\n                }\n                options.next();\n\n            } else {\n                throw new NotFoundError();\n            }\n        }\n        else if (result === null) { // send null response\n            if (action.isJsonTyped) {\n                options.response.json(null);\n            } else {\n                options.response.send(null);\n            }\n            options.next();\n        }\n        else if (result instanceof Buffer) { // check if it's binary data (Buffer)\n            options.response.end(result, \"binary\");\n        }\n        else if (result instanceof Uint8Array) { // check if it's binary data (typed array)\n            options.response.end(Buffer.from(result as any), \"binary\");\n        }\n        else if (result.pipe instanceof Function) {\n            result.pipe(options.response);\n        }\n        else { // send regular result\n            if (action.isJsonTyped) {\n                options.response.json(result);\n            } else {\n                options.response.send(result);\n            }\n            options.next();\n        }\n    }\n\n    /**\n     * Handles result of failed executed controller action.\n     */\n    handleError(error: any, action: ActionMetadata | undefined, options: Action): any {\n        if (this.isDefaultErrorHandlingEnabled) {\n            const response: any = options.response;\n\n            // set http code\n            // note that we can't use error instanceof HttpError properly anymore because of new typescript emit process\n            if (error.httpCode) {\n                response.status(error.httpCode);\n            } else {\n                response.status(500);\n            }\n\n            // apply http headers\n            if (action) {\n                Object.keys(action.headers).forEach(name => {\n                    response.header(name, action.headers[name]);\n                });\n            }\n\n            // send error content\n            if (action && action.isJsonTyped) {\n                response.json(this.processJsonError(error));\n            } else {\n                response.send(this.processTextError(error)); // todo: no need to do it because express by default does it\n            }\n        }\n        options.next(error);\n    }\n\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n\n    /**\n     * Creates middlewares from the given \"use\"-s.\n     */\n    protected prepareMiddlewares(uses: UseMetadata[]) {\n        const middlewareFunctions: Function[] = [];\n        uses.forEach(use => {\n            if (use.middleware.prototype && use.middleware.prototype.use) { // if this is function instance of MiddlewareInterface\n                middlewareFunctions.push((request: any, response: any, next: (err: any) => any) => {\n                    try {\n                        const useResult = (getFromContainer(use.middleware) as ExpressMiddlewareInterface).use(request, response, next);\n                        if (isPromiseLike(useResult)) {\n                            useResult.catch((error: any) => {\n                                this.handleError(error, undefined, {request, response, next});\n                                return error;\n                            });\n                        }\n\n                        return useResult;\n                    } catch (error) {\n                        this.handleError(error, undefined, {request, response, next});\n                    }\n                });\n\n            } else if (use.middleware.prototype && use.middleware.prototype.error) {  // if this is function instance of ErrorMiddlewareInterface\n                middlewareFunctions.push(function (error: any, request: any, response: any, next: (err: any) => any) {\n                    return (getFromContainer(use.middleware) as ExpressErrorMiddlewareInterface).error(error, request, response, next);\n                });\n\n            } else {\n                middlewareFunctions.push(use.middleware);\n            }\n        });\n        return middlewareFunctions;\n    }\n\n    /**\n     * Dynamically loads express module.\n     */\n    protected loadExpress() {\n        if (require) {\n            if (!this.express) {\n                try {\n                    this.express = require(\"express\")();\n                } catch (e) {\n                    throw new Error(\"express package was not found installed. Try to install it: npm install express --save\");\n                }\n            }\n        } else {\n            throw new Error(\"Cannot load express. Try to install all required dependencies.\");\n        }\n    }\n\n    /**\n     * Dynamically loads body-parser module.\n     */\n    protected loadBodyParser() {\n        try {\n            return require(\"body-parser\");\n        } catch (e) {\n            throw new Error(\"body-parser package was not found installed. Try to install it: npm install body-parser --save\");\n        }\n    }\n\n    /**\n     * Dynamically loads multer module.\n     */\n    protected loadMulter() {\n        try {\n            return require(\"multer\");\n        } catch (e) {\n            throw new Error(\"multer package was not found installed. Try to install it: npm install multer --save\");\n        }\n    }\n\n}\n"],"sourceRoot":"../.."}