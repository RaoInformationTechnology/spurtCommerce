{"version":3,"sources":["../../src/metadata/ResponseHandleMetadata.ts"],"names":[],"mappings":";;AAGA;;GAEG;AACH;IA+BI,4EAA4E;IAC5E,cAAc;IACd,4EAA4E;IAE5E,iCAAY,IAAiC;QACzC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC1B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC1B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACtB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACxB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;IAC9C,CAAC;IAEL,8BAAC;AAAD,CA3CA,AA2CC,IAAA;AA3CY,0DAAuB","file":"ResponseHandleMetadata.js","sourcesContent":["import {ResponseHandlerMetadataArgs} from \"./args/ResponseHandleMetadataArgs\";\nimport {ResponseHandlerType} from \"./types/ResponseHandlerType\";\n\n/**\n * Response handler metadata.\n */\nexport class ResponseHandlerMetadata {\n\n    // -------------------------------------------------------------------------\n    // Properties\n    // -------------------------------------------------------------------------\n\n    /**\n     * Class on which's method decorator is set.\n     */\n    target: Function;\n\n    /**\n     * Method on which decorator is set.\n     */\n    method: string;\n\n    /**\n     * Property type. See ResponsePropertyMetadataType for possible values.\n     */\n    type: ResponseHandlerType;\n\n    /**\n     * Property value. Can be status code, content-type, header name, template name, etc.\n     */\n    value: any;\n\n    /**\n     * Secondary property value. Can be header value for example.\n     */\n    secondaryValue: any;\n\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n\n    constructor(args: ResponseHandlerMetadataArgs) {\n        this.target = args.target;\n        this.method = args.method;\n        this.type = args.type;\n        this.value = args.value;\n        this.secondaryValue = args.secondaryValue;\n    }\n\n}"],"sourceRoot":".."}