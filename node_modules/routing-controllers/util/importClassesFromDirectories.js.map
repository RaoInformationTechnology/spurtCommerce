{"version":3,"sources":["../../src/util/importClassesFromDirectories.ts"],"names":[],"mappings":";;AAAA,2BAA6B;AAE7B;;GAEG;AACH,sCAA6C,WAAqB,EAAE,OAAwB;IAAxB,wBAAA,EAAA,WAAW,KAAK,EAAE,KAAK,CAAC;IAExF,IAAM,eAAe,GAAG,UAAU,QAAa,EAAE,SAAqB;QAClE,EAAE,CAAC,CAAC,QAAQ,YAAY,QAAQ,CAAC,CAAC,CAAC;YAC/B,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC7B,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,YAAY,KAAK,CAAC,CAAC,CAAC;YACnC,QAAQ,CAAC,OAAO,CAAC,UAAC,CAAM,IAAK,OAAA,eAAe,CAAC,CAAC,EAAE,SAAS,CAAC,EAA7B,CAA6B,CAAC,CAAC;QAChE,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,YAAY,MAAM,IAAI,OAAO,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC;YACpE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,UAAA,GAAG,IAAI,OAAA,eAAe,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,SAAS,CAAC,EAAzC,CAAyC,CAAC,CAAC;QACpF,CAAC;QAED,MAAM,CAAC,SAAS,CAAC;IACrB,CAAC,CAAC;IAEF,IAAM,QAAQ,GAAG,WAAW,CAAC,MAAM,CAAC,UAAC,OAAO,EAAE,GAAG;QAC7C,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACrE,CAAC,EAAE,EAAc,CAAC,CAAC;IAEnB,IAAM,IAAI,GAAG,QAAQ;SAChB,MAAM,CAAC,UAAA,IAAI;QACR,IAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAClE,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,YAAY,KAAK,OAAO,CAAC;IAClF,CAAC,CAAC;SACD,GAAG,CAAC,UAAA,IAAI;QACL,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACzB,CAAC,CAAC,CAAC;IAEP,MAAM,CAAC,eAAe,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AACrC,CAAC;AA5BD,oEA4BC","file":"importClassesFromDirectories.js","sourcesContent":["import * as path from \"path\";\n\n/**\n * Loads all exported classes from the given directory.\n */\nexport function importClassesFromDirectories(directories: string[], formats = [\".js\", \".ts\"]): Function[] {\n\n    const loadFileClasses = function (exported: any, allLoaded: Function[]) {\n        if (exported instanceof Function) {\n            allLoaded.push(exported);\n        } else if (exported instanceof Array) {\n            exported.forEach((i: any) => loadFileClasses(i, allLoaded));\n        } else if (exported instanceof Object || typeof exported === \"object\") {\n            Object.keys(exported).forEach(key => loadFileClasses(exported[key], allLoaded));\n        }\n\n        return allLoaded;\n    };\n\n    const allFiles = directories.reduce((allDirs, dir) => {\n        return allDirs.concat(require(\"glob\").sync(path.normalize(dir)));\n    }, [] as string[]);\n\n    const dirs = allFiles\n        .filter(file => {\n            const dtsExtension = file.substring(file.length - 5, file.length);\n            return formats.indexOf(path.extname(file)) !== -1 && dtsExtension !== \".d.ts\";\n        })\n        .map(file => {\n            return require(file);\n        });\n\n    return loadFileClasses(dirs, []);\n}"],"sourceRoot":".."}