{"version":3,"sources":["../../src/metadata-builder/MetadataBuilder.ts"],"names":[],"mappings":"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","file":"MetadataBuilder.js","sourcesContent":["import {ActionMetadata} from \"../metadata/ActionMetadata\";\nimport {ControllerMetadata} from \"../metadata/ControllerMetadata\";\nimport {InterceptorMetadata} from \"../metadata/InterceptorMetadata\";\nimport {MiddlewareMetadata} from \"../metadata/MiddlewareMetadata\";\nimport {ParamMetadata} from \"../metadata/ParamMetadata\";\nimport { ParamMetadataArgs } from \"../metadata/args/ParamMetadataArgs\";\nimport {ResponseHandlerMetadata} from \"../metadata/ResponseHandleMetadata\";\nimport { RoutingControllersOptions } from \"../RoutingControllersOptions\";\nimport {UseMetadata} from \"../metadata/UseMetadata\";\nimport {getMetadataArgsStorage} from \"../index\";\n\n/**\n * Builds metadata from the given metadata arguments.\n */\nexport class MetadataBuilder {\n\n    constructor(private options: RoutingControllersOptions) { }\n\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n\n    /**\n     * Builds controller metadata from a registered controller metadata args.\n     */\n    buildControllerMetadata(classes?: Function[]) {\n        return this.createControllers(classes);\n    }\n\n    /**\n     * Builds middleware metadata from a registered middleware metadata args.\n     */\n    buildMiddlewareMetadata(classes?: Function[]): MiddlewareMetadata[] {\n        return this.createMiddlewares(classes);\n    }\n\n    /**\n     * Builds interceptor metadata from a registered interceptor metadata args.\n     */\n    buildInterceptorMetadata(classes?: Function[]): InterceptorMetadata[] {\n        return this.createInterceptors(classes);\n    }\n\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n\n    /**\n     * Creates middleware metadatas.\n     */\n    protected createMiddlewares(classes?: Function[]): MiddlewareMetadata[] {\n        const middlewares = !classes ? getMetadataArgsStorage().middlewares : getMetadataArgsStorage().filterMiddlewareMetadatasForClasses(classes);\n        return middlewares.map(middlewareArgs => new MiddlewareMetadata(middlewareArgs));\n    }\n\n    /**\n     * Creates interceptor metadatas.\n     */\n    protected createInterceptors(classes?: Function[]): InterceptorMetadata[] {\n        const interceptors = !classes ? getMetadataArgsStorage().interceptors : getMetadataArgsStorage().filterInterceptorMetadatasForClasses(classes);\n        return interceptors.map(interceptorArgs => new InterceptorMetadata({\n            target: interceptorArgs.target,\n            method: undefined,\n            interceptor: interceptorArgs.target\n        }));\n    }\n\n    /**\n     * Creates controller metadatas.\n     */\n    protected createControllers(classes?: Function[]): ControllerMetadata[] {\n        const controllers = !classes ? getMetadataArgsStorage().controllers : getMetadataArgsStorage().filterControllerMetadatasForClasses(classes);\n        return controllers.map(controllerArgs => {\n            const controller = new ControllerMetadata(controllerArgs);\n            controller.build(this.createControllerResponseHandlers(controller));\n            controller.actions = this.createActions(controller);\n            controller.uses = this.createControllerUses(controller);\n            controller.interceptors = this.createControllerInterceptorUses(controller);\n            return controller;\n        });\n    }\n\n    /**\n     * Creates action metadatas.\n     */\n    protected createActions(controller: ControllerMetadata): ActionMetadata[] {\n        return getMetadataArgsStorage()\n            .filterActionsWithTarget(controller.target)\n            .map(actionArgs => {\n                const action = new ActionMetadata(controller, actionArgs, this.options);\n                action.params = this.createParams(action);\n                action.uses = this.createActionUses(action);\n                action.interceptors = this.createActionInterceptorUses(action);\n                action.build(this.createActionResponseHandlers(action));\n                return action;\n            });\n    }\n\n    /**\n     * Creates param metadatas.\n     */\n    protected createParams(action: ActionMetadata): ParamMetadata[] {\n        return getMetadataArgsStorage()\n            .filterParamsWithTargetAndMethod(action.target, action.method)\n            .map(paramArgs => new ParamMetadata(action, this.decorateDefaultParamOptions(paramArgs)));\n    }\n\n    /**\n     * Decorate paramArgs with default settings\n     */\n    private decorateDefaultParamOptions(paramArgs: ParamMetadataArgs) {\n        let options = this.options.defaults && this.options.defaults.paramOptions;\n        if (!options)\n            return paramArgs;\n        \n        if (paramArgs.required === undefined)\n            paramArgs.required = options.required || false;\n\n        return paramArgs;\n    }\n\n    /**\n     * Creates response handler metadatas for action.\n     */\n    protected createActionResponseHandlers(action: ActionMetadata): ResponseHandlerMetadata[] {\n        return getMetadataArgsStorage()\n            .filterResponseHandlersWithTargetAndMethod(action.target, action.method)\n            .map(handlerArgs => new ResponseHandlerMetadata(handlerArgs));\n    }\n\n    /**\n     * Creates response handler metadatas for controller.\n     */\n    protected createControllerResponseHandlers(controller: ControllerMetadata): ResponseHandlerMetadata[] {\n        return getMetadataArgsStorage()\n            .filterResponseHandlersWithTarget(controller.target)\n            .map(handlerArgs => new ResponseHandlerMetadata(handlerArgs));\n    }\n\n    /**\n     * Creates use metadatas for actions.\n     */\n    protected createActionUses(action: ActionMetadata): UseMetadata[] {\n        return getMetadataArgsStorage()\n            .filterUsesWithTargetAndMethod(action.target, action.method)\n            .map(useArgs => new UseMetadata(useArgs));\n    }\n\n    /**\n     * Creates use interceptors for actions.\n     */\n    protected createActionInterceptorUses(action: ActionMetadata): InterceptorMetadata[] {\n        return getMetadataArgsStorage()\n            .filterInterceptorUsesWithTargetAndMethod(action.target, action.method)\n            .map(useArgs => new InterceptorMetadata(useArgs));\n    }\n\n    /**\n     * Creates use metadatas for controllers.\n     */\n    protected createControllerUses(controller: ControllerMetadata): UseMetadata[] {\n        return getMetadataArgsStorage()\n            .filterUsesWithTargetAndMethod(controller.target, undefined)\n            .map(useArgs => new UseMetadata(useArgs));\n    }\n\n    /**\n     * Creates use interceptors for controllers.\n     */\n    protected createControllerInterceptorUses(controller: ControllerMetadata): InterceptorMetadata[] {\n        return getMetadataArgsStorage()\n            .filterInterceptorUsesWithTargetAndMethod(controller.target, undefined)\n            .map(useArgs => new InterceptorMetadata(useArgs));\n    }\n\n}\n"],"sourceRoot":".."}