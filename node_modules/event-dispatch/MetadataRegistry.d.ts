import { SubscriberMetadata } from "./SubscriberMetadata";
import { OnMetadata } from "./OnMetadata";
import { EventsHandler } from "./EventsHandler";
/**
 * Registry for all controllers and actions.
 */
export declare class MetadataRegistry {
    private _container;
    private _collectEventsHandlers;
    private _onMetadatas;
    /**
     * Sets a container that can be used in subscribers. This allows you to inject container services into
     * subscribers.
     */
    container: {
        get(someClass: any): any;
    };
    /**
     * Gets all events handlers that registered here via annotations.
     */
    collectEventsHandlers: EventsHandler[];
    addSubscriberMetadata(metadata: SubscriberMetadata): void;
    addOnMetadata(metadata: OnMetadata): void;
    private instantiateClass(subscriber);
}
/**
 * Default action registry is used as singleton and can be used to storage all metadatas.
 */
export declare let defaultMetadataRegistry: MetadataRegistry;
